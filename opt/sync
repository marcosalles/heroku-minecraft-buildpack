#!/usr/bin/env bash

worldName=$(cat server.properties | grep level-name | sed -E 's/[^=]+=//g')
worldName=${worldName:-world}
backupFileList=("${worldName}" "${worldName}_nether" "${worldName}_the_end" plugins server.properties *.json *.txt)

if [ -n "$AWS_BUCKET" ]; then
  cat << EOF > .s3cfg
[default]
access_key = ${AWS_ACCESS_KEY}
secret_key = ${AWS_SECRET_KEY}
EOF
  if [ -d "${worldName}" ]; then
    for file in $(echo ${backupFileList[@]} | ls -1); do
      s3cmd sync ${file} s3://${AWS_BUCKET}/${file}
    done
  else
    s3cmd get --recursive s3://${AWS_BUCKET}/
  fi
  rm .s3cfg
fi

if [ -n "$DROPBOX_ACCESS_TOKEN" ]; then
  fileName="${DROPBOX_BACKUP_FILE:-backup}.tar.gz"
  filePath="${DROPBOX_BACKUP_DIR:-}"
  cat << EOF > .dropbox_uploader
OAUTH_ACCESS_TOKEN=${DROPBOX_ACCESS_TOKEN}
EOF
  if [ -d "${worldName}" ]; then
    tar -czvf "${fileName}" $(echo ${backupFileList[@]} | ls -1)
    bin/dropbox_uploader.sh upload "${fileName}" "/${filePath}"
    rm "${fileName}"
  else
    if bin/dropbox_uploader.sh download "/${filePath}/${fileName}"
    then
      tar -xzvf "${fileName}"
      rm "${fileName}"
    fi
  fi
  rm .dropbox_uploader
fi
